version: 2

aliases:
  # Workflow filters
  - &filter-only-master
    branches:
      only: master

defaults: &defaults
  working_directory: ~/plugin
  docker:
    - image: circleci/node:12

jobs:
  build_plugin:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install modules
        command: |
          yarn install --pure-lockfile
    - run:
        name: Run Toolkit Build
        command: npx grafana-toolkit plugin:ci-build
    - save_cache:
        paths:
        - node_modules
        key: yarn-packages-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
        - ci

  build_docs:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install yarn
        command: |
          yarn install --pure-lockfile
    - run:
        name: Build Docs
        command: |
          mkdir ci # Avoid error if not exists
          npx grafana-toolkit plugin:ci-docs
    - save_cache:
        paths:
        - node_modules
        key: yarn-packages-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
        - ci

  package:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Package Distribution
        command: npx grafana-toolkit plugin:ci-package
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/package
        - ci/packages
        - ci/dist
        - ci/grafana-test-env

  test_6_5_2:
    <<: *defaults
    docker:
    - image: circleci/node:12-browsers
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Setup Grafana (local install)
        command: |
          wget https://dl.grafana.com/oss/release/grafana_6.5.2_amd64.deb
          sudo apt-get install -y adduser libfontconfig1
          sudo dpkg -i grafana_6.5.2_amd64.deb
          sudo apt-get install locate
          sudo updatedb
          sudo locate grafana
          sudo cat /etc/grafana/grafana.ini
          sudo echo ------------------------
          sudo cp ci/grafana-test-env/custom.ini /usr/share/grafana/conf/custom.ini
          sudo cp ci/grafana-test-env/custom.ini /etc/grafana/grafana.ini
          sudo service grafana-server start
          sudo grafana-cli --version
    - run:
        name: Run e2e tests
        command: |
          npx grafana-toolkit plugin:ci-test
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/test_6_5_2
    - store_test_results:
        path: ci/jobs/test_6_5_2
    - store_artifacts:
        path: ci/jobs/test_6_5_2

  report:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Toolkit Report
        command: npx grafana-toolkit plugin:ci-report
    - store_artifacts:
        path: ci

  publish_github_release:
    working_directory: ~/plugin
    docker:
      - image: cibuilds/github:0.13
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "0b:66:0c:56:98:dc:ea:69:79:f1:56:22:3f:c1:22:99"
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            # copy ci dist
            cp -r ci/jobs/build_plugin/dist .
            # copy ci artifacts
            mkdir -p artifacts
            cp -r ci/packages/* artifacts
            apk add --update --no-cache jq
            PLUGIN_NAME=`cat dist/plugin.json|jq '.id'| sed s/\"//g`
            RELEASE_NOTES=`awk 'BEGIN {FS="##"; RS=""} FNR==3 {print; exit}' CHANGELOG.md`
            VERSION=`cat dist/plugin.json|jq '.info.version'| sed s/\"//g`
            git config user.email "eng@grafana.com"
            git config user.name "CircleCI Automation"
            git checkout -b release-${VERSION}
            git add --force dist/
            git add artifacts/
            git commit -m "automated release $VERSION [skip ci]"
            git push -f origin release-${VERSION}
            git tag -f v${VERSION}
            git push -f origin v${VERSION}
            ghr \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -n "${PLUGIN_NAME} v${VERSION}" \
              -b "${RELEASE_NOTES}" \
              -delete \
              v${VERSION} \
              ./artifacts/

workflows:
  version: 2
  plugin_workflow:
    jobs:
    - build_plugin
    - build_docs
    - package:
        requires:
        - build_plugin
        - build_docs
    - test_6_5_2:
        requires:
        - package
    - report:
        requires:
        - test_6_5_2
    - approve_release:
        type: approval
        requires:
          - report
        filters: *filter-only-master
    - publish_github_release:
        requires:
          - approve_release
        filters: *filter-only-master
