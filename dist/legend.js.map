{"version":3,"sources":["../src/legend.js"],"names":["angular","kbn","$","PerfectScrollbar","module","directive","popoverSrv","$timeout","link","scope","elem","$container","firstRender","ctrl","panel","data","seriesList","i","legendScrollbar","$on","destroy","events","on","series","color","render","getSeriesIndexForElement","el","parents","toggleSeries","e","currentTarget","index","seriesInfo","scrollPosition","children","scrollTop","sortLegend","stat","legend","sort","sortDesc","getLegendHeaderHtml","statName","name","header","html","cssClass","getLegendPercentageHtml","openColorSelector","target","length","find","show","element","position","template","openOn","model","autoClose","toggleAxis","colorSelected","changeSeriesColor","legendType","empty","css","append","width","sideWidth","showValues","values","percentage","tableLayout","toggleClass","legendHeader","valueName","_","sortBy","stats","reverse","total","seriesShown","seriesElements","seriesData","hideEmpty","allIsNull","decimal","percentageDecimals","hiddenSeries","alias","label","value","formatValue","pvalue","toFixed","push","topPadding","tbodyElem","addScrollbar","destroyScrollbar","scrollbarOptions","scrollYMarginOffset","suppressScrollX","update"],"mappings":"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","file":"legend.js","sourcesContent":["import angular from \"angular\";\nimport kbn from \"app/core/utils/kbn\";\nimport $ from \"jquery\";\nimport \"jquery.flot\";\nimport \"jquery.flot.time\";\nimport PerfectScrollbar from \"./lib/perfect-scrollbar.min\";\n\nangular\n  .module(\"grafana.directives\")\n  .directive(\"piechartLegend\", function(popoverSrv, $timeout) {\n    return {\n      link: function(scope, elem) {\n        var $container = $('<section class=\"piechart-legend\"></section>');\n        var firstRender = true;\n        var ctrl = scope.ctrl;\n        var panel = ctrl.panel;\n        var data;\n        var seriesList;\n        var i;\n        var legendScrollbar;\n\n        scope.$on(\"$destroy\", function() {\n          if (legendScrollbar) {\n            legendScrollbar.destroy();\n          }\n        });\n\n        ctrl.events.on(\"render\", function() {\n          data = ctrl.series;\n          if (data) {\n            for (var i in data) {\n              data[i].color = ctrl.data[i].color;\n            }\n            render();\n          }\n        });\n\n        function getSeriesIndexForElement(el) {\n          return el.parents(\"[data-series-index]\").data(\"series-index\");\n        }\n\n        function toggleSeries(e) {\n          var el = $(e.currentTarget);\n          var index = getSeriesIndexForElement(el);\n          var seriesInfo = seriesList[index];\n          var scrollPosition = $($container.children(\"tbody\")).scrollTop();\n          ctrl.toggleSeries(seriesInfo);\n          $($container.children(\"tbody\")).scrollTop(scrollPosition);\n        }\n\n        function sortLegend(e) {\n          var el = $(e.currentTarget);\n          var stat = el.data(\"stat\");\n\n          if (stat !== panel.legend.sort) {\n            panel.legend.sortDesc = null;\n          }\n\n          // if already sort ascending, disable sorting\n          if (panel.legend.sortDesc === false) {\n            panel.legend.sort = null;\n            panel.legend.sortDesc = null;\n            ctrl.render();\n            return;\n          }\n\n          panel.legend.sortDesc = !panel.legend.sortDesc;\n          panel.legend.sort = stat;\n          ctrl.render();\n        }\n\n        function getLegendHeaderHtml(statName) {\n          var name = statName;\n\n          if (panel.legend.header) {\n            name = panel.legend.header;\n          }\n\n          var html = '<th class=\"pointer\" data-stat=\"' + statName + '\">' + name;\n\n          if (panel.legend.sort === statName) {\n            var cssClass = panel.legend.sortDesc\n              ? \"fa fa-caret-down\"\n              : \"fa fa-caret-up\";\n            html += ' <span class=\"' + cssClass + '\"></span>';\n          }\n\n          return html + \"</th>\";\n        }\n\n        function getLegendPercentageHtml(statName) {\n          var name = \"percentage\";\n          var html = '<th class=\"pointer\" data-stat=\"' + statName + '\">' + name;\n\n          if (panel.legend.sort === statName) {\n            var cssClass = panel.legend.sortDesc\n              ? \"fa fa-caret-down\"\n              : \"fa fa-caret-up\";\n            html += ' <span class=\"' + cssClass + '\"></span>';\n          }\n\n          return html + \"</th>\";\n        }\n\n        function openColorSelector(e) {\n          // if we clicked inside poup container ignore click\n          if ($(e.target).parents(\".popover\").length) {\n            return;\n          }\n\n          var el = $(e.currentTarget).find(\".fa-minus\");\n          var index = getSeriesIndexForElement(el);\n          var series = seriesList[index];\n\n          $timeout(function() {\n            popoverSrv.show({\n              element: el[0],\n              position: \"bottom center\",\n              template:\n                '<series-color-picker series=\"series\" onToggleAxis=\"toggleAxis\" onColorChange=\"colorSelected\">' +\n                \"</series-color-picker>\",\n              openOn: \"hover\",\n              model: {\n                autoClose: true,\n                series: series,\n                toggleAxis: function() {},\n                colorSelected: function(color) {\n                  ctrl.changeSeriesColor(series, color);\n                }\n              }\n            });\n          });\n        }\n\n        function render() {\n          if (panel.legendType === \"On graph\") {\n            $container.empty();\n            $(\".piechart-legend\").css(\"padding-top\", 0);\n            return;\n          } else {\n            $(\".piechart-legend\").css(\"padding-top\", 6);\n          }\n\n          if (firstRender) {\n            elem.append($container);\n            $container.on(\"click\", \".piechart-legend-icon\", openColorSelector);\n            $container.on(\"click\", \".piechart-legend-alias\", toggleSeries);\n            $container.on(\"click\", \"th\", sortLegend);\n            firstRender = false;\n          }\n\n          seriesList = data;\n\n          $container.empty();\n\n          var width =\n            panel.legendType == \"Right side\" && panel.legend.sideWidth\n              ? panel.legend.sideWidth + \"px\"\n              : \"\";\n          $container.css(\"min-width\", width);\n\n          var showValues = panel.legend.values || panel.legend.percentage;\n          var tableLayout =\n            (panel.legendType === \"Under graph\" ||\n              panel.legendType === \"Right side\") &&\n            showValues;\n\n          $container.toggleClass(\"piechart-legend-table\", tableLayout);\n\n          var legendHeader;\n          if (tableLayout) {\n            var header = '<tr><th colspan=\"2\" style=\"text-align:left\"></th>';\n            if (panel.legend.values) {\n              header += getLegendHeaderHtml(ctrl.panel.valueName);\n            }\n            if (panel.legend.percentage) {\n              header += getLegendPercentageHtml(ctrl.panel.valueName);\n            }\n            header += \"</tr>\";\n            legendHeader = $(header);\n          }\n\n          if (panel.legend.sort) {\n            seriesList = _.sortBy(seriesList, function(series) {\n              return series.stats[panel.legend.sort];\n            });\n            if (panel.legend.sortDesc) {\n              seriesList = seriesList.reverse();\n            }\n          }\n\n          if (panel.legend.percentage) {\n            var total = 0;\n            for (i = 0; i < seriesList.length; i++) {\n              total += seriesList[i].stats[ctrl.panel.valueName];\n            }\n          }\n\n          var seriesShown = 0;\n          var seriesElements = [];\n\n          for (i = 0; i < seriesList.length; i++) {\n            var series = seriesList[i];\n            var seriesData = ctrl.data[i];\n\n            // ignore empty series\n            if (panel.legend.hideEmpty && series.allIsNull) {\n              continue;\n            }\n            // ignore series excluded via override\n            if (!series.legend) {\n              continue;\n            }\n\n            var decimal = 2;\n            if (ctrl.panel.legend.percentageDecimals || ctrl.panel.legend.percentageDecimals === 0) {\n              decimal = ctrl.panel.legend.percentageDecimals;\n            }\n\n            var html = '<div class=\"piechart-legend-series';\n            if (ctrl.hiddenSeries[series.alias]) {\n              html += \" piechart-legend-series-hidden\";\n            }\n            html += '\" data-series-index=\"' + i + '\">';\n            html += '<span class=\"piechart-legend-icon\" style=\"float:none;\">';\n            html +=\n              '<i class=\"fa fa-minus pointer\" style=\"color:' +\n              seriesData.color +\n              '\"></i>';\n            html += \"</span>\";\n\n            html +=\n              '<a class=\"piechart-legend-alias\" style=\"float:none;\">' +\n              seriesData.label +\n              \"</a>\";\n\n            if (showValues && tableLayout) {\n              var value = series.stats[ctrl.panel.valueName];\n              if (panel.legend.values) {\n                html +=\n                  '<div class=\"piechart-legend-value\">' +\n                  ctrl.formatValue(value) +\n                  \"</div>\";\n              }\n              if (total) {\n                var pvalue = (value / total * 100).toFixed(decimal) + \"%\";\n                html += '<div class=\"piechart-legend-value\">' + pvalue + \"</div>\";\n              }\n            }\n\n            html += \"</div>\";\n\n            seriesElements.push($(html));\n            seriesShown++;\n          }\n          if (tableLayout) {\n            var topPadding = 6;\n            var tbodyElem = $(\"<tbody></tbody>\");\n            // tbodyElem.css(\"max-height\", maxHeight - topPadding);\n            tbodyElem.append(legendHeader);\n            tbodyElem.append(seriesElements);\n            $container.append(tbodyElem);\n          } else {\n            $container.append(seriesElements);\n          }\n\n          if (panel.legendType === \"Under graph\") {\n            addScrollbar();\n          } else {\n            destroyScrollbar();\n          }\n        }\n        function addScrollbar() {\n\n          const scrollbarOptions = {\n            // Number of pixels the content height can surpass the container height without enabling the scroll bar.\n            scrollYMarginOffset: 2,\n            suppressScrollX: true\n          };\n\n          if (!legendScrollbar) {\n            legendScrollbar = new PerfectScrollbar(\n              \".piechart-legend\",\n              scrollbarOptions\n            );\n          } else {\n            legendScrollbar.update();\n          }\n        }\n\n        function destroyScrollbar() {\n          if (legendScrollbar) {\n            legendScrollbar.destroy();\n            legendScrollbar = null;\n          }\n        }\n      }\n    };\n  });\n"]}